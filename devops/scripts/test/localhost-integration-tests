#!/bin/bash -e

usage()
{
    echo "usage: localhost-integration-tests [[--taa true|false] [--message-tracking true|false] [--help]]"
    exit 1
}

# Get the SCRIPT_DIR in a way that works for both linux and mac
# readlink behaves differently on linux and mac. The following does not work on
# mac: script_dir=`dirname $(readlink -f $0)`
# https://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
SOURCE=$0
while [ -h "$SOURCE" ]; do
  TARGET="$(readlink "$SOURCE")"
  if [[ $SOURCE == /* ]]; then
    SOURCE="$TARGET"
  else
    SCRIPT_DIR="$( dirname "$SOURCE" )"
    SOURCE="$SCRIPT_DIR/$TARGET"
  fi
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

echo "Begin running integration tests on localhost..."
echo "SCRIPT_DIR: ${SCRIPT_DIR}"

echo "Begin clean setup of verity on localhost..."

taa_enabled=true
message_progress_tracking_enabled=true

while [ "$1" != "" ]; do
    case $1 in
        -t | --taa )              shift
                                  taa_enabled=$(echo "$1" | tr '[:upper:]' '[:lower:]')
                                  ;;
        -m | --message-tracking)  shift
                                  message_progress_tracking_enabled=$(echo "$1" | tr '[:upper:]' '[:lower:]')
                                  ;;
        -h | --help )             usage
                                  exit
                                  ;;
        * )                       usage
                                  exit 1
    esac
    shift
done

if [[ "$taa_enabled" != "true" && "$taa_enabled" != "false" ]]; then
  echo "Invalid value for -t|--taa option: $taa_enabled. Must be true|false."
  usage
fi

echo "LIB_INDY_LEDGER_TAA_ENABLED=${taa_enabled}"

${SCRIPT_DIR}/localhost-clean --taa $taa_enabled
echo "Done clean setup of verity on localhost..."

echo "Begin running integration tests..."

echo "LIB_INDY_LEDGER_TAA_ENABLED=${taa_enabled}"
echo "LIB_INDY_LEDGER_TAA_AUTO_ACCEPT=${taa_enabled}"
echo "MESSAGE_PROGRESS_TRACKING_ENABLED=${message_progress_tracking_enabled}"

export LIB_INDY_LEDGER_TAA_ENABLED=$taa_enabled
export LIB_INDY_LEDGER_TAA_AUTO_ACCEPT=$taa_enabled
export MESSAGE_PROGRESS_TRACKING_ENABLED=$message_progress_tracking_enabled

testSuite=${TEST_SUITE:-"*"}
echo "Begin running integration tests... TEST_SUITE=$testSuite"
if [[ "$testSuite" == "*" || "$testSuite" == "Protocols" ]]
then
  echo "Running protocol Connecting integration tests..."
  sbt "verity/multi-jvm:testOnly com.evernym.verity.integration.Connecting"
  echo "Running protocol TicTacToe integration tests..."
  sbt "verity/multi-jvm:testOnly com.evernym.verity.integration.TicTacToe"
fi
if [ "$testSuite" != "Protocols" ]
then
  suiteSource="${SCRIPT_DIR}/../../../integration-tests/src/test/scala/com/evernym/integrationtests/e2e/apis/$testSuite.scala"
  if [[ "$testSuite" != "*" && ! -f $suiteSource ]]
  then
    echo "Suite $testSuite not found."
    echo "Suite source $suiteSource does not exist."
    exit 1
  fi
  echo "Running $testSuite e2e API integration tests..."
  sbt "integrationTests/testOnly com.evernym.integrationtests.e2e.apis.$testSuite"
fi

echo "Done running integration tests..."

echo "Done running integration tests on localhost..."
