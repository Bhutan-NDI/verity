akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  stdout-loglevel = "OFF"
  loglevel = "WARNING"

  actor {
    debug {
      # enable function of Actor.loggable(), which is to log any received message
      # at DEBUG level, see the “Testing Actor Systems” section of the Akka
      # Documentation at http://akka.io/docs
      receive = on

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off

      # enable DEBUG logging of unhandled messages
      unhandled = on

      # enable WARN logging of misconfigured routers
      router-misconfiguration = on

    }
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    # log-sent-messages = on

    # changing threshold to 12 as recommended in the docs. http://doc.akka.io/docs/akka/current/scala/remoting.html#Failure_Detector
    watch-failure-detector.threshold = 12.0

    artery {
      canonical {
        # assuming you are NOT running more than one node on same vm/machine
        # if you are, then, you'll have to change below port to be unique per node on same vm/machine
        port = 2551

        # put IP address which other cluster member can reach to (REVIEW_AND_DECIDE)
        hostname = "localhost"
      }
    }
  }

  persistence {
    journal {
      plugin = "verity.dynamodb-journal"
    }

    snapshot-store {
      plugin = "verity.dynamodb-snapshot-store"
    }
  }

  http.server {
    remote-address-header = on
  }

  management.http {
    enabled = Y
    hostname = "127.0.0.1"
    api-creds = [
      {"username": "admin", "password":"newadmin"}
    ]
  }

}

include "dynamodb.conf"