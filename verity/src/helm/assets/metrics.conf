verity {
  metrics {
    protocol {
      tags {
        uses-sponsor = true
        uses-sponsee = true
      }
    }
    activity-tracking {
      active-user {
        # Type=Duration -> Found at https://www.scala-lang.org/api/2.9.3/scala/concurrent/duration/Duration.html
        # This is a sliding window (+- timestamp) where the token is considered valid by Verity.
        # If expiration happens, requester will need to request a new token from their sponsor
        # Valid Units: `d, day, h, hour, min, minute, s, sec, second, ms, milli, millisecond, Âµs, micro, microsecond, ns, nano, nanosecond`
        # and their pluralized forms (for every but the first mentioned form of each unit, i.e. no "ds", but "days").
        time-windows = []
        # Monthly is not of type Duration so it can't go in the time-windows array. Monthly is handled a little differently in the code
        monthly-window = false
        enabled = false
      }

      active-relationships {
        # Type=Duration -> Found at https://www.scala-lang.org/api/2.9.3/scala/concurrent/duration/Duration.html
        # This is a sliding window (+- timestamp) where the token is considered valid by Verity.
        # If expiration happens, requester will need to request a new token from their sponsor
        # Valid Units: `d, day, h, hour, min, minute, s, sec, second, ms, milli, millisecond, Âµs, micro, microsecond, ns, nano, nanosecond`
        # and their pluralized forms (for every but the first mentioned form of each unit, i.e. no "ds", but "days").
        time-windows = []
        # Monthly is not of type Duration so it can't go in the time-windows array. Monthly is handled a little differently in the code
        monthly-window = false
        enabled = false
      }
    }

    # the rules for filter execution are simple: any string is accepted by the filter if
    # it matches at least one of the includes patterns and doesn’t match any of the excludes patterns
    writer {
      # list of metric name regex to be excluded (any one match will exclude it)      
      exclude = [
        # below are few examples
        # "metricname",
        # "metricname.*"
      ]
    }
    
    backend = "com.evernym.verity.observability.metrics.backend.KamonMetricsBackend"
    
    enabled = Y
  }
}

kamon {
  instrumentation {

    akka.filters {

      "actors.track" {
        # NOTE: this is only for local instrumentation, not efficient/scaling for production/load environments
        includes = [
          "**/AgencyAgent/**", "**/AgencyAgentPairwise/**",

          "**/ConsumerAgent/**", "**/EnterpriseAgent/**", "**/VerityAgent/**",    # legacy names
          "**/UserAgent/**",

          "**/ConsumerAgentPairwise/**", "**/EnterpriseAgentPairwise/**", "**/VerityAgentPairwise/**",    # legacy names
          "**/UserAgentPairwise/**"
        ]
        excludes = []
      }

      "dispatchers" {
        includes = ["akka.actor.default-dispatcher"]
        excludes = []
      }

      "trace" {
        includes = ["**"]
        excludes = []
      }
    }

    logback.mdc {
      # this is needed for datadog to be able to track operation
      span-operation-name-key = "operation"
    }
  }
}