verity {
  agent {
    authentication {

      # determines if this feature is by default available or not
      enabled: true

      # map of 'domain-id' and their authorized keys
      keys {
        # provided keys will be available to agent belonging to given DID as key
        # examples:
        # domain-id-1: ["key1", "key2"]
        # domain-id-2: ["key3", "key4"]
      }
    }
  }
  msg-template {
    sms-msg-template-invite-url = "#{baseUrl}/agency/invite?t=#{token}"

    sms-msg-template-offer-conn-msg = "#{requesterName} would like you to install Connect-Me for greater identity verification: #{appUrlLink}"

    sms-offer-template-deeplink-url = "https://connectme.app.link?t=#{token}"

    agent-specific {

      # example:
      # <domain-id-1>: {
      #   sms-msg-template-offer-conn-msg = "#{requesterName} would like to connect with you. #{appUrlLink}"
      #   sms-offer-template-deeplink-url = "https://masterpass.app.link?t=#{token}"
      # }
    }
  }
  retention-policy {
    protocol-state {
      # A retention policy can be set for a specific domain-id. If nothing is provided, the 'default' values will be used.
      # <protoref>: basicmessage, relationship, issue-credential, present-proof, questionanswer, wallet-backup

      # A retention policy can be set as a default for the entire environment.
      # This is overriden if a specific 'domain-id' provides configuration.
      default {
        # For all undefined protorefs, this is the default policy

        undefined-fallback {

          # defines after how many days data will be expired
          expire-after-days = 3 day

          # if set to true, irrespective of 'expire-after-days', data will be deleted
          # once protocol reaches to terminal state
          # if not set, by default it will be considered false
          expire-after-terminal-state = true
        }
        # you can also define default values for specific protocols
        # <protoref> {
        #   expire-after-days = <days>
        #   expire-after-terminal-state = <boolean>
        # }
      }

      #Example domain registry:
      # <domain-id> {
      #   <protoref> {
      #     expire-after-days = <days>
      #     expire-after-terminal-state = <boolean>
      #   }
      #   For all undefined protorefs, this is the default policy
      #   undefined-fallback {
      #     expire-after-days = <days>
      #     expire-after-terminal-state = <boolean>
      #   }
      # }
    }
    outbox-state {
      # A retention policy can be set for a specific domain-id. If nothing is provided, the 'default' values will be used.
      # <protoref>: basicmessage, relationship, issue-credential, present-proof, questionanswer, wallet-backup

      # A retention policy can be set as a default for the entire environment.
      # This is overriden if a specific 'domain-id' provides configuration.
      default {
        # For all undefined protorefs, this is the default policy

        undefined-fallback {

          # for messages with destination within same domain
          intra-domain {
            # defines after how many days data will be expired
            expire-after-days = 1 day

            # if set to true, irrespective of 'expire-after-days', data will be deleted
            # once the message is delivered to all target outboxes.
            # if not set, by default it will be considered false
            expire-after-terminal-state = true
          }

          # for messages with destination outside of the domain
          inter-domain {
            # defines after how many days data will be expired
            expire-after-days = 1 day

            # if set to true, irrespective of 'expire-after-days', data will be deleted
            # once the message is delivered to all target outboxes.
            # if not set, by default it will be considered false
            expire-after-terminal-state = true
          }
        }
        # you can also define default values for specific protocols
        # <protoref> {
        #   expire-after-days = <days>
        #   expire-after-terminal-state = <boolean>
        # }
      }
      #Example domain registry:
      # <domain-id> {
      #   <protoref> {
      #     expire-after-days = <days>
      #     expire-after-terminal-state = <boolean>
      #   }
      #   For all undefined protorefs, this is the default policy
      #   undefined-fallback {
      #     expire-after-days = <days>
      #     expire-after-terminal-state = <boolean>
      #   }
      # }
    }
  }
}