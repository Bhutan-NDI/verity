apiVersion: apps/v1
kind: Deployment
metadata:
  name: dev-cas
  labels:
    app.kubernetes.io/type: app
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dev-cas
  replicas: {{ .Values.startReplicas }}
  template:
    metadata:
      labels:
        app: dev-cas
        revision: {{ .Release.Revision | quote }}
        actorSystemName: verity
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: dev-cas
            revision: {{ .Release.Revision | quote }}
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: dev-cas
            revision: {{ .Release.Revision | quote }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      containers:
      - name: dev-cas
        image: {{ .Values.deployment.image }}:{{ .Values.deployment.tag }}
        lifecycle:
          preStart:
            exec:
              command: ["/bin/sh", "-c", "sleep 60"]
        resources:
          requests:
            memory: 512Mi
            cpu: 500m
          limits:
            memory: 1024Mi
            cpu: 1000m
        startupProbe:
          httpGet:
            path: {{ .Values.deployment.probes.startup.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.startup.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.deployment.probes.readiness.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.readiness.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.deployment.probes.liveness.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.liveness.failureThreshold }}
        envFrom:
        - configMapRef:
            name: vars-dev-cas
        env:
        - name: CINNAMON__CHMETRICS__DATADOG_REPORTER__HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: VERITY__METRICS__TAGS__POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config-files
          mountPath: /etc/verity/verity-application/config-map
          readOnly: true
        - name: ledger-genesis-files
          mountPath: /var/lib/indy/
          readOnly: true
        ports:
        - name: http
          containerPort: {{ .Values.vars.VERITY_HTTP_PORT }}
        - name: management
          containerPort: {{ .Values.vars.VERITY_AKKA_MANAGEMENT_HTTP_PORT }}
          protocol: TCP
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
      - name: indy-pool
        image: registry.gitlab.com/evernym/containers/indy-pool:1.12.4_1.0.9
        resources:
          requests:
            memory: 256Mi
            cpu: 250m
          limits:
            memory: 512Mi
            cpu: 500m
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 9701
          - containerPort: 9702
          - containerPort: 9703
          - containerPort: 9704
          - containerPort: 9705
          - containerPort: 9706
          - containerPort: 9707
          - containerPort: 9708
          - containerPort: 5678
          - containerPort: 5679
        args:
          - "--TAA_ENABLED=true"
      volumes:
      - name: config-files
        configMap:
          name: file-dev-cas
      - name: ledger-genesis-files
        configMap:
          name: ledger-genesis-dev-cas
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dev-cas
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: dev-cas
