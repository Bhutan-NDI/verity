apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "verity.fullname" . }}
  labels:
    {{- include "verity.labels" . | nindent 4 }}
    {{- include "verity.datadogLabels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "verity.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.startReplicas }}
  template:
    metadata:
      labels:
        {{- include "verity.labels" . | nindent 8 }}
        revision: {{ .Release.Revision | quote }}
        actorSystemName: verity
        {{- include "verity.datadogLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9095" # default value defined in verity/src/main/resources/reference.conf
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            {{- include "verity.selectorLabels" . | nindent 12 }}
            revision: {{ .Release.Revision | quote }}
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            {{- include "verity.selectorLabels" . | nindent 12 }}
            revision: {{ .Release.Revision | quote }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      serviceAccountName: {{ template "verity.serviceAccountName" . }}
      containers:
      - name: {{ template "verity.fullname" . }}
        image: {{ .Values.deployment.image }}:{{ .Values.deployment.tag }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        startupProbe:
          httpGet:
            path: {{ .Values.deployment.probes.startup.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.startup.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.startup.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.startup.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.deployment.probes.readiness.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.readiness.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.deployment.probes.liveness.path }}
            port: {{ .Values.deployment.containerPort }}
          periodSeconds: {{ .Values.deployment.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.probes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.probes.liveness.failureThreshold }}
        envFrom:
        - configMapRef:
            name: vars-{{ template "verity.fullname" . }}
        env:
        - name: CINNAMON__CHMETRICS__DATADOG_REPORTER__HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: VERITY__METRICS__TAGS__POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: AKKA__MANAGEMENT__CLUSTER__BOOTSTRAP__CONTACT_POINT_DISCOVERY__SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: "metadata.labels['app']"
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/vault/secrets"
          readOnly: true
        - name: config-files
          mountPath: /etc/verity/verity-application/config-map
          readOnly: true
        - name: ledger-genesis-files
          mountPath: /var/lib/indy/
          readOnly: true
        ports:
        - name: http
          containerPort: {{ .Values.deployment.containerPort }}
        - name: management
          containerPort: 8558
          protocol: TCP
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: aws-secrets-{{ template "verity.fullname" . }}
      - name: config-files
        configMap:
          name: file-{{ template "verity.fullname" . }}
      - name: ledger-genesis-files
        configMap:
          name: ledger-genesis-{{ template "verity.fullname" . }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ template "verity.fullname" . }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "verity.selectorLabels" . | nindent 6 }}
