apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "verity.fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "verity.fullname" . }}
  replicas: {{ .Values.startReplicas }}
  template:
    metadata:
      labels:
        app: {{ template "verity.fullname" . }}
        actorSystemName: verity
      annotations:
        {{- if .Values.deployment.vault.enable }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "k8s-eks-{{ .Values.env }}"
        vault.hashicorp.com/auth-path: "auth/k8s/eks-{{ .Values.env }}"
        vault.hashicorp.com/agent-inject-secret-credentials: "kubernetes_secrets/eks-{{ .Values.env }}/{{ .Values.name }}-{{ .Values.service }}"
        vault.hashicorp.com/tls-secret: vault-tls-secret
        vault.hashicorp.com/ca-cert: /vault/tls/evernym-root-ca.crt
        vault.hashicorp.com/agent-pre-populate-only : "true"
        vault.hashicorp.com/agent-inject-template-credentials: |
          {{`{{ with secret `}}"kubernetes_secrets/eks-{{ .Values.env }}/{{ .Values.name }}-{{ .Values.service }}"{{` -}}`}}
          {{`{{ range $k, $v := .Data -}}
            export {{ $k }}={{ $v }}
          {{ end }}
          {{- end }}`}}
        {{- end }}
    spec:
      containers:
      - name: {{ template "verity.fullname" . }}
        image: {{ .Values.deployment.image }}:{{ .Values.deployment.tag }}
        startupProbe:
          httpGet:
            path: /agency/heartbeat
            port: 9000
          periodSeconds: 10
          failureThreshold: 20
        readinessProbe:
          httpGet:
            path: /agency/heartbeat
            port: 9000
        livenessProbe:
          httpGet:
            path: /agency/heartbeat
            port: 9000
          periodSeconds: 30
          failureThreshold: 1
        envFrom:
        - configMapRef:
            name: vars-{{ template "verity.fullname" . }}
        volumeMounts:
        - name: config-files
          mountPath: /etc/verity/verity-application/config-map
          readOnly: true
        - name: ledger-genesis-files
          mountPath: /var/lib/indy/
          readOnly: true
        ports:
        - name: http
          containerPort: {{ .Values.deployment.containerPort }}
        - name: management
          containerPort: 8558
          protocol: TCP
        {{- if .Values.deployment.vault.enable }}
        command: ['/bin/sh', '-c']
        args:
          - >-
            . /vault/secrets/credentials;
            /usr/bin/java
            -javaagent:/usr/lib/verity-application/kanela-agent.jar
            -Dlogback.statusListenerClass=ch.qos.logback.core.status.OnConsoleStatusListener
            -cp /etc/verity/verity-application:/etc/verity/verity-application/config-map:/usr/lib/verity-application/verity-assembly.jar
            com.evernym.verity.Main
        {{- end }}
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
      volumes:
      - name: config-files
        configMap:
          name: file-{{ template "verity.fullname" . }}
      - name: ledger-genesis-files
        configMap:
          name: ledger-genesis-files

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader-{{ template "verity.fullname" . }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods-{{ template "verity.fullname" . }}
subjects:
  - kind: User
    name: system:serviceaccount:default:default
roleRef:
  kind: Role
  name: pod-reader-{{ template "verity.fullname" . }}
  apiGroup: rbac.authorization.k8s.io
