kamon {

  environment {
    host = "node"
  }

  # interval at which metric snapshots will be collected and sent to all metric reporters.
  metric {
    tick-interval = 1 second
  }

  # filters are used by several Kamon modules to determine whether to include or exclude
  # certain application components from metrics collection and tracing

  # the rules for filter execution are simple: any string is accepted by the filter if
  # it matches at least one of the includes patterns and doesn’t match any of the excludes patterns
  # see this for more detail about util.filters: https://kamon.io/documentation/1.x/core/basics/utilities/

  instrumentation.akka.filters {

    "actors.track" {
      # this is only for local instrumentation, not efficient/scaling for production/load environments
      includes = [
        "**/AgencyAgent/**", "**/AgencyAgentPairwise/**",

        "**/ConsumerAgent/**", "**/EnterpriseAgent/**", "**/VerityAgent/**",    # legacy names
        "**/UserAgent/**",

        "**/ConsumerAgentPairwise/**", "**/EnterpriseAgentPairwise/**", "**/VerityAgentPairwise/**",    # legacy names
        "**/UserAgentPairwise/**"
      ]
      excludes = []
    }

    "dispatchers" {
      includes = ["akka.actor.default-dispatcher"]
      excludes = []
    }

    "trace" {
      includes = ["**"]
      excludes = []
    }

    # this defines groups
    group {
      "agency-agent-actors" {
        includes = ["**/AgencyAgent/**"]
        excludes = []
      }
      "agency-agent-pairwise-actors" {
        includes = ["**/AgencyAgentPairwise/**"]
        excludes = []
      }
      "agent-actors" {
        includes = [
          "**/ConsumerAgent/**", "**/EnterpriseAgent/**", "**/VerityAgent/**",    # legacy names
          "**/UserAgent/**"
        ]
        excludes = []
      }
      "agent-pairwise-actors" {
        includes = [
          "**/ConsumerAgentPairwise/**", "**/EnterpriseAgentPairwise/**", "**/VerityAgentPairwise/**",    # legacy names
          "**/UserAgentPairwise/**"
        ]
        excludes = []
      }
    }
  }

  # enable or disable publishing the Prometheus scraping enpoint using a embedded server.
  prometheus {
    start-embedded-http-server = no
  }

  # Disable features of kamon-system-metrics module that are enabled by default that we do not want
  system-metrics {
    # The sigar library is enabled by default. Disable it due to a core dump while loading/using the sigar library.
    # A fatal error has been detected by the Java Runtime Environment:
    #
    #  SIGSEGV (0xb) at pc=0x00007fa04cf4d311, pid=12147, tid=0x00007fa04d146700
    #
    sigar-enabled = false

    host {
      # Disable collecting all host-level metrics in hopes that the sigar library won't be loaded/used and cause the
      # aforementioned (above) SIGSEGV (core dump)
      enabled = no
    }
  }
  modules.jaeger.enabled = false
}

verity {
  metrics {
    enabled = Y

    # the rules for filter execution are simple: any string is accepted by the filter if
    # it matches at least one of the includes patterns and doesn’t match any of the excludes patterns
    util.filters {
      "general" {
        includes = [
          {"name": "jvm*"},
          {"name": "executor_pool*"},
          {"name": "libindy*"},

          {"name": "akka_system_active_actors_count*"},
          {"name": "akka_system_active_actors_sum*"},

          {"name": "akka_group_pending_messages_count*"},
          {"name": "akka_group_pending_messages_sum*"},

          {"name": "akka_group_processing_time_seconds_count*"},
          {"name": "akka_group_processing_time_seconds_sum*"},

          {"name": "akka_group_time_in_mailbox_seconds_count*"},
          {"name": "akka_group_time_in_mailbox_seconds_sum*"},

          {"name": "akka_actor_time_in_mailbox*"},    # this is only for local instrumentation

          {"name": "as*"},
          {"name": "span*"}
        ]
        excludes = []
      }
    }
  }
}
