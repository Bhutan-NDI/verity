syntax = "proto3";

// Brought in from scalapb-runtime
import "scalapb/scalapb.proto";

//here we can find about wrappers for primitive types to make it optional
//https://scalapb.github.io/customizations.html#primitive-wrappers
//https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto
import "google/protobuf/wrappers.proto";

package com.evernym.verity.protocol.protocols.issueCredential.v_1_0;

message InitParam {
    string name = 1;
    string value = 2;
}

message Initialized {
    option (scalapb.message).extends = "Event";
    repeated InitParam params = 1;
}

message CredPreviewAttr {
    string name = 1;
    string value = 2;
    google.protobuf.StringValue mimeType = 3;
}

message CredPreviewObject {
    string type = 1;
    repeated CredPreviewAttr attributes = 2;
}

message AttachmentObject {
    string id = 1;
    string mimeType = 2;
    string data_base64 = 3;
}

message CredProposed {
    string credDefId = 1;
    CredPreviewObject credentialProposal = 2;
    string comment = 3;
}

message ProposalSent {
    option (scalapb.message).extends = "Event";
    string senderId = 1;
    CredProposed proposal = 2;
}

message ProposalReceived {
    option (scalapb.message).extends = "Event";
    string senderId = 1;
    CredProposed proposal = 2;
}

message CredOffered {
    CredPreviewObject credentialPreview = 1;
    repeated AttachmentObject offersAttach = 2;
    string comment = 3;
    google.protobuf.StringValue price = 4;
}

message OfferSent {
    option (scalapb.message).extends = "Event";
    string senderId = 1;
    CredOffered offer = 2;
    bool autoIssue = 3;
}

message OfferReceived {
    option (scalapb.message).extends = "Event";
    string senderId = 1;
    CredOffered offer = 2;
}

message CredRequested {
    repeated AttachmentObject requestAttach = 1;
    string comment = 2;
}

message RequestSent {
    option (scalapb.message).extends = "Event";
    string senderId = 1;
    CredRequested request = 2;
}

message RequestReceived {
    option (scalapb.message).extends = "Event";
    string senderId = 1;
    CredRequested request = 2;
}

message CredIssued {
    repeated AttachmentObject credAttach = 1;
    string comment = 2;
}

message IssueCredSent {
    option (scalapb.message).extends = "Event";
    CredIssued cred = 1;
}

message IssueCredReceived {
    option (scalapb.message).extends = "Event";
    CredIssued cred = 1;
}

message Rejected {
    option (scalapb.message).extends = "Event";
    google.protobuf.StringValue comment = 1;
}

message ProblemReportReceived {
    option (scalapb.message).extends = "Event";
    string description = 1;
}
