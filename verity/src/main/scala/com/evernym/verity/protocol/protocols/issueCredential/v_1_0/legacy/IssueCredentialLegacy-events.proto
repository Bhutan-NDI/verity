syntax = "proto3";

// Brought in from scalapb-runtime
import "scalapb/scalapb.proto";

import "protocols/issueCredential/v_1_0/issueCredential-events.proto";
package com.evernym.verity.protocol.protocols.issueCredential.v_1_0.legacy;

message ProposalSentLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  string senderId = 1;
  CredProposed proposal = 2;
}

message ProposalReceivedLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  string senderId = 1;
  CredProposed proposal = 2;
}

message OfferSentLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  string senderId = 1;
  CredOffered offer = 2;
  bool autoIssue = 3;
}

message OfferReceivedLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  string senderId = 1;
  CredOffered offer = 2;
}

message RequestSentLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  string senderId = 1;
  CredRequested request = 2;
}

message RequestReceivedLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  string senderId = 1;
  CredRequested request = 2;
}

message IssueCredSentLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  CredIssued cred = 1;
}

message IssueCredReceivedLegacy {
  option (scalapb.message).extends = "com.evernym.verity.protocol.protocols.issueCredential.v_1_0.Event";
  CredIssued cred = 1;
}
