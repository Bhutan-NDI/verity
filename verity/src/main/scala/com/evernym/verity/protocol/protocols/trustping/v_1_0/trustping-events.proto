syntax = "proto3";

// Brought in from scalapb-runtime
import "scalapb/scalapb.proto";

package com.evernym.verity.protocol.protocols.trustping.v_1_0;

message InitParam {
    string name = 1;
    string value = 2;
}

message Initialized {
    option (scalapb.message).extends = "Event";
    string selfIdValue = 1;
    string otherIdValue = 2;
}

message MyRole {
    option (scalapb.message).extends = "Event";
    int32  roleNum = 1;
}

// TODO: How to make this timing message reusable?
message Timing {
    // Not extending `TrustPingEvent` as it needs to be usable across protocols
    string expires_time = 1;
    string in_time = 2;
    string out_time = 3;
    string stale_time = 4;
    //int64 delay_milli = 5;
    int32 delay_milli = 5;
    string wait_until_time = 6;
}

message PingEvt {
    string comment = 1;
    bool responseRequested = 2;
    Timing timing = 3;
}

message ResponseEvt {
    string comment = 1;
    Timing timing = 3;
}

message SentPing {
    option (scalapb.message).extends = "Event";
    PingEvt ping = 1;
}

message ReceivedPing {
    option (scalapb.message).extends = "Event";
    PingEvt ping = 1;
}

message SentResponse {
    option (scalapb.message).extends = "Event";
    ResponseEvt resp = 1;
}

message ReceivedResponse {
    option (scalapb.message).extends = "Event";
    ResponseEvt resp = 1;
}