package com.evernym.verity.agentmsg.msgfamily

import com.evernym.verity.protocol.engine.Constants._
import com.evernym.verity.protocol.engine.MsgFamily.{EVERNYM_QUALIFIER, typeStrFromMsgType}
import com.evernym.verity.protocol.engine._
import com.evernym.verity.protocol.protocols.issuersetup.v_0_6.IssuerSetupDefinition
import com.evernym.verity.protocol.protocols.questionAnswer.v_1_0.{QuestionAnswerDefinition, QuestionAnswerMsgFamily}
import com.evernym.verity.protocol.protocols.tokenizer.TokenizerMsgFamily
import com.evernym.verity.util.MsgIdProvider

object MsgFamilyUtil {

  val BUNDLED = "bundled"

  //note: this name is given for existing messages which wasn't categorized to any family
  val MSG_FAMILY_UNKNOWN = "unknown"
  val PACKAGING_FORMAT_INDY_MSG_PACK = "indy.msgpack"

  val MSG_FAMILY_CONNECTING = "connecting"
  val MSG_FAMILY_ROUTING = "routing"
  val MSG_FAMILY_PAIRWISE = "pairwise"
  val MSG_FAMILY_CONFIGS = "configs"
  val MSG_FAMILY_WALLET_BACKUP = "wallet-backup"
  val MSG_FAMILY_DEAD_DROP = "dead-drop"

  val MSG_TYPE_FWD = "FWD"
  val MSG_TYPE_FORWARD = "forward"
  val MSG_TYPE_CREATE_MSG = "CREATE_MSG"
  val MSG_TYPE_MSG_CREATED = "MSG_CREATED"
  val SEND_SMS = "SEND_SMS"
  val SHORTEN_URL = "SHORTEN_URL"

  val MSG_TYPE_CONNECTED = "CONNECTED"
  val MSG_TYPE_SIGNED_UP = "SIGNED_UP"

  val MSG_TYPE_GET_CONFIGS = "GET_CONFIGS"
  val MSG_TYPE_CONFIGS = "CONFIGS"
  val MSG_TYPE_REMOVE_CONFIGS = "REMOVE_CONFIGS"
  val MSG_TYPE_CONFIGS_REMOVED = "CONFIGS_REMOVED"
  val MSG_TYPE_UPDATE_CONFIGS = "UPDATE_CONFIGS"
  val MSG_TYPE_CONFIGS_UPDATED = "CONFIGS_UPDATED"

  val MSG_TYPE_UPDATE_COM_METHOD = "UPDATE_COM_METHOD"
  val MSG_TYPE_COM_METHOD_UPDATED = "COM_METHOD_UPDATED"
  val MSG_TYPE_DETAIL_COM_METHOD_UPDATED = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONFIGS, MFV_0_6, MSG_TYPE_COM_METHOD_UPDATED)

  val MSG_TYPE_SEND_MSGS = "SEND_MSGS"
  val MSG_TYPE_MSGS_SENT = "MSGS_SENT"

  val MSG_TYPE_DETAIL_CREATE_AGENT: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_AGENT_PROVISIONING, MFV_0_6, MSG_TYPE_CREATE_AGENT)
  val MSG_TYPE_AGENT_CREATED = "AGENT_CREATED"

  val MSG_TYPE_GET_TOKEN = "get-token"
  val MSG_TYPE_DETAIL_GET_TOKEN: String = typeStrFromMsgType(EVERNYM_QUALIFIER, TokenizerMsgFamily.name, TokenizerMsgFamily.version, MSG_TYPE_GET_TOKEN)

  val MSG_TYPE_SEND_TOKEN = "send-token"
  val MSG_TYPE_DETAIL_SEND_TOKEN: String = typeStrFromMsgType(EVERNYM_QUALIFIER, TokenizerMsgFamily.name, TokenizerMsgFamily.version, MSG_TYPE_SEND_TOKEN)


  val MSG_TYPE_CONN_REQ = "CONN_REQUEST"
  val MSG_TYPE_DETAIL_CONN_REQ: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_CONN_REQ)
  val MSG_TYPE_CONN_REQ_RESP = "CONN_REQUEST_RESP"
  val MSG_TYPE_DETAIL_CONN_REQ_RESP: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_CONN_REQ_RESP)

  val MSG_TYPE_ACCEPT_CONN_REQ = "ACCEPT_CONN_REQ"
  val MSG_TYPE_DETAIL_ACCEPT_CONN_REQ: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_ACCEPT_CONN_REQ)
  val MSG_TYPE_ACCEPT_CONN_REQ_RESP = "ACCEPT_CONN_REQ_RESP"
  val MSG_TYPE_DETAIL_ACCEPT_CONN_REQ_RESP: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_ACCEPT_CONN_REQ_RESP)

  val MSG_TYPE_REDIRECT_CONN_REQ = "REDIRECT_CONN_REQ"
  val MSG_TYPE_CONN_REQ_REDIRECTED = "CONN_REQ_REDIRECTED"
  val MSG_TYPE_DETAIL_CONN_REQ_REDIRECTED: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_CONN_REQ_REDIRECTED)

  val MSG_TYPE_CONNECTING_GET_STATUS = "get-status"

  val MSG_TYPE_DECLINE_CONN_REQ = "DECLINE_CONN_REQ"
  val MSG_TYPE_DECLINE_CONN_REQ_RESP = "DECLINE_CONN_REQ_RESP"
  val MSG_TYPE_DETAIL_DECLINE_CONN_REQ_RESP: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_DECLINE_CONN_REQ_RESP)

  val MSG_TYPE_CONN_REQ_ACCEPTED = "CONN_REQ_ACCEPTED"
  val MSG_TYPE_DETAIL_CONN_REQ_ACCEPTED: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_CONN_REQ_ACCEPTED)

  val MSG_TYPE_CONN_REQ_DECLINED = "CONN_REQ_DECLINED"
  val MSG_TYPE_CONN_REQ_DECLINED_RESP = "CONN_REQ_DECLINED_RESP"

  val MSG_TYPE_CREATE_KEY = "CREATE_KEY"
  val MSG_TYPE_DETAIL_CREATE_KEY: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_CREATE_KEY)

  val MSG_TYPE_KEY_CREATED = "KEY_CREATED"
  val MSG_TYPE_DETAIL_KEY_CREATED: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_KEY_CREATED)

  val MSG_TYPE_CREATE_CONNECTION = "CREATE_CONNECTION"
  val MSG_TYPE_DETAIL_CREATE_CONNECTION: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_CONNECTING, MFV_0_6, MSG_TYPE_CREATE_CONNECTION)

  val MSG_TYPE_GET_MSGS_BY_CONNS = "GET_MSGS_BY_CONNS"
  val MSG_TYPE_MSGS_BY_CONNS = "MSGS_BY_CONNS"
  val MSG_TYPE_DETAIL_GET_MSGS_BY_CONNS: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_GET_MSGS_BY_CONNS)
  val MSG_TYPE_DETAIL_MSGS_BY_CONNS: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_MSGS_BY_CONNS)

  val MSG_TYPE_GET_MSGS = "GET_MSGS"
  val MSG_TYPE_MSGS = "MSGS"
  val MSG_TYPE_DETAIL_GET_MSGS: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_GET_MSGS)
  val MSG_TYPE_DETAIL_MSGS: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_MSGS)

  val MSG_TYPE_SEND_REMOTE_MSG = "SEND_REMOTE_MSG"
  val MSG_TYPE_REMOTE_MSG_SENT = "REMOTE_MSG_SENT"
  val MSG_TYPE_DETAIL_SEND_REMOTE_MSG: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_SEND_REMOTE_MSG)
  val MSG_TYPE_DETAIL_REMOTE_MSG_SENT_RESP: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_REMOTE_MSG_SENT)

  val MSG_TYPE_UPDATE_CONN_STATUS = "UPDATE_CONN_STATUS"
  val MSG_TYPE_CONN_STATUS_UPDATED = "CONN_STATUS_UPDATED"
  val MSG_TYPE_DETAIL_CONN_STATUS_UPDATED: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_CONN_STATUS_UPDATED)

  val MSG_TYPE_UPDATE_MSG_STATUS_BY_CONNS = "UPDATE_MSG_STATUS_BY_CONNS"
  val MSG_TYPE_MSG_STATUS_UPDATED_BY_CONNS = "MSG_STATUS_UPDATED_BY_CONNS"
  val MSG_TYPE_DETAIL_MSG_STATUS_UPDATED_BY_CONNS: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_MSG_STATUS_UPDATED_BY_CONNS)

  val MSG_TYPE_UPDATE_MSG_STATUS = "UPDATE_MSG_STATUS"
  val MSG_TYPE_MSG_STATUS_UPDATED = "MSG_STATUS_UPDATED"
  val MSG_TYPE_DETAIL_UPDATE_MSG_STATUS: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_UPDATE_MSG_STATUS)
  val MSG_TYPE_DETAIL_MSG_STATUS_UPDATED: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_PAIRWISE, MFV_0_6, MSG_TYPE_MSG_STATUS_UPDATED)

  val MSG_TYPE_WALLET_INIT_BACKUP = "WALLET_INIT_BACKUP"
  val MSG_TYPE_DETAIL_WALLET_INIT_BACKUP: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_WALLET_BACKUP, MFV_0_1_0, MSG_TYPE_WALLET_INIT_BACKUP)

  val MSG_TYPE_WALLET_BACKUP = "WALLET_BACKUP"
  val MSG_TYPE_DETAIL_WALLET_BACKUP: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_WALLET_BACKUP, MFV_0_1_0, MSG_TYPE_WALLET_BACKUP)

  val MSG_TYPE_WALLET_BACKUP_RESTORE = "WALLET_BACKUP_RESTORE"

  val MSG_TYPE_DEAD_DROP_RETRIEVE = "DEAD_DROP_RETRIEVE"
  val MSG_TYPE_DETAIL_DEAD_DROP_RETRIEVE: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_DEAD_DROP, MFV_0_1_0, MSG_TYPE_DEAD_DROP_RETRIEVE)

  val MSG_FAMILY_QUESTION_ANSWER: MsgFamilyName = QuestionAnswerDefinition.msgFamily.protoRef.msgFamilyName
  val MSG_TYPE_DETAIL_QUESTION_ANSWER_ASK_QUESTION: String = typeStrFromMsgType(QuestionAnswerMsgFamily.qualifier, MSG_FAMILY_QUESTION_ANSWER, MFV_1_0, "question")

  val MSG_FAMILY_ISSUER_SETUP: MsgFamilyName = IssuerSetupDefinition.msgFamily.protoRef.msgFamilyName
  val MSG_TYPE_DETAIL_ISSUER_SETUP_CREATE: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_ISSUER_SETUP, MFV_0_6, "create")
  val MSG_TYPE_DETAIL_ISSUER_SETUP_CURRENT_IDENTIFIER: String = typeStrFromMsgType(EVERNYM_QUALIFIER, MSG_FAMILY_ISSUER_SETUP, MFV_0_6, "current-public-identifier")

  val MSG_TYPE_UPDATE_EXPIRY_TIME = "UPDATE_EXPIRY_TIME"
  val MSG_TYPE_GET_INVITE_DETAIL = "GET_INVITE_DETAIL"
  val MSG_TYPE_DEAD_DROP_STORE_DATA = "DEAD_DROP_STORE_DATA"

  //sub msg types
  val MSG_TYPE_MSG_DETAIL = "MSG_DETAIL"
  val MSG_TYPE_UNKNOWN = "unknown"
  val CREATE_MSG_TYPE_GENERAL = "general"

  val CREATE_MSG_TYPE_CONN_REQ = "connReq"
  val CREATE_MSG_TYPE_CONN_REQ_ANSWER = "connReqAnswer"

  val CREATE_MSG_TYPE_REDIRECT_CONN_REQ = "connReqRedirect"
  val CREATE_MSG_TYPE_CONN_REQ_REDIRECTED = "connReqRedirected"

  val CREATE_MSG_TYPE_CRED_OFFER = "credOffer"
  val CREATE_MSG_TYPE_CRED_REQ = "credReq"
  val CREATE_MSG_TYPE_CRED = "cred"
  val CREATE_MSG_TYPE_PROOF_REQ = "proofReq"
  val CREATE_MSG_TYPE_PROOF = "proof"

  val CREATE_MSG_TYPE_TOKEN_XFER_OFFER = "tokenTransferOffer"
  val CREATE_MSG_TYPE_TOKEN_XFER_REQ = "tokenTransferReq"
  val CREATE_MSG_TYPE_TOKEN_XFERRED = "tokenTransferred"


  def getNewMsgUniqueId: String = MsgIdProvider.getNewMsgId

}